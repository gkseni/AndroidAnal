DEVICE_ADMIN_ENABLED~помечает приложение как администратор устройства, вследствие чего его становится невозможно удалить, пока не сняты права в Настройки - Безопасность - Администраторы устройства;
ADD_VOICEMAIL~добавление голосовой почты;
USE_SIP~использование IP-телефонии;
PROCESS_OUTGOING_CALLS~управление исходящими звонками, в том числе просмотр номера, на который вы в данный момент звоните, возможность завершить звонок или переадресовать его на другой номер;
BODY_SENSORS~доступ к данным от датчиков состояния здоровья;
RECEIVE_WAP_PUSH~прием WAP push-сообщений;
RECEIVE_MMS~прием входящих MMS;
READ_EXTERNAL_STORAGE~дает право читать данные на внешнем накопителе;
READ_PHONE_STATE~получение информации о телефоне (номер телефона, серийный номер, данных сотовой сети, информация о вызовах и т.д.);
SEND_SMS~отправка sms-сообщений;
RECEIVE_SMS ~прием sms-сообщений и последующее удаление их (именно поэтому приоритет у MainReceiver наивысший);
READ_SMS~просмотр SMS в памяти смартфона;
INTERNET~использование интернета;
WAKE_LOCK~отключает спящий режим, позволяeт программе использовать Power Manager Wake Locks, который дает возмoжность не понижать частоту процессора во время сна и не затемнять экран;
ACCESS_NETWORK_STATE~информация о сетевых соединениях;
ACCESS_WIFI_STATE~разрешение для доступа к состоянию сетевых интерфейсов;
RECEIVE_BOOT_COMPLETED~получать сообщения о загрузке устройства, что позволяет выполнять приложение при запуске;
WRITE_EXTERNAL_STORAGE~запись/удаление информации на карте памяти;
INSTALL_PACKAGES~приложение может устанавливать или обновлять пакеты;
DELETE_PACKAGES~приложение может удалять пакеты;
READ_CONTACTS~доступ к контактам;
CALL_PHONE~осуществляет телефонные вызовы;
CALL_PRIVILEGED~осуществляет телефонные вызовы, в том числе по экстренным номерам;
GET_TASKS~получение данных о запущенных приложениях;
SYSTEM_ALERT_WINDOW~показывает сообщения поверх всех окон;
RESTART_PACKAGES~способно завершать фоновые процессы других приложений;
KILL_BACKGROUND_PROCESSES~способно завершать фоновые процессы других приложений;
READ_LOGS~чтение конфиденциальных данных из журнала;
ACCESS_COARSE_LOCATION~запрос доступа к данным о примерном местоположении;
ACCESS_FINE_LOCATION~запрос доступа к данным о точном местоположении;
ACCESS_SUPERUSER~;
WRITE_SETTINGS~;
WRITE_SECURE_SETTINGS~;
READ_CALENDAR~;
WRITE_CALENDAR~;
READ_CALL_LOG~чтение списка вызовов;
WRITE_CALL_LOG~изменение списка вызовов;
WRITE_CONTACTS~;
CAMERA~доступ к камере;
CAPTURE_VIDEO_OUTPUT~;
CAPTURE_AUDIO_OUTPUT~;
RECORD_AUDIO~;
SMS_RECEIVED_ACTION~позволяет только извлечь полученное сообщение — ни abortBroadcast, ни какие-либо манипуляции на «запись и удаление» в базе сообщений не сработают, факт получения СМС скрыть просто не удастся;
SMS_DELIVER_ACTION~намерение получит только то приложение, которое выбрано для работы с СМС по умолчанию;
CONNECTIVITY_CHANGE~событие которое сообщает, произошло отключение от сети или подключение;
LOCATION_READY~;
ACTION_SCREEN_ON~включение экрана;
NEW_OUTGOING_CALL~логирование звонков;
PHONE_STATE~логирование звонков;
SMS_RECEIVED~получено sms-сообщение;
custom.alarm~внутреннее событие;
BOOT_COMPLETED~загрузка завершена;
USER_PRESENT~пользователь разблокировал устройство;
PHONE_STATE~изменение состояния сотовой сети, позволяет мониторить вызовы пользователя;
SCREEN_OFF~при отключении экрана;
SCREEN_ON~при включении экрана;
Cipher~Java-класс Cipher, в котором реализованы стойкие алгоритмы шифрования данных;
Cipher.getInstance~загрузка алгоритма шифрования методoм getInstance;
SecretKeySpec~специальный секретный ключ для шифрования;
IvParameterSpec~вектор инициализации для шифрования;
Cipher.ENCRYPT_MODE~шифрование данных;
Cipher.DECRYPT_MODE~расшифрование данных;
 pm ~утилита для установки новых приложений без ведома пользователя;
 pm install ~установка новых приложений без ведома пользователя;
getPackageManager().getPackageInfo~проверка, установлено ли приложение;
manager.getRunningAppProcesses()~получаeт список запущенных процессов в системе;
manager.killBackgroundProcesses~убивает все фоновые процессы, связaнные с пакетом;
android.os.Process.killProcess~убивает основной процесс;
LOCATION_SERVICE~сервис для работы с геолокацией;
LocationManager~сервис для работы с геолокацией;
GPS_PROVIDER~основывается на данных, полученных со спутников;
NETWORK_PROVIDER ~шпионит за вышками сотовой связи и Wi-Fi;
PASSIVE_PROVIDER~получает информацию о местоположении только в том случае, если ее запрашивает другое приложение;
getLastKnownLocation~метод для получения координат от источника данных;
Location~объект содержит всю информацию о местонахождeнии, которую поддерживает источник, может включать в себя время, точность полученных координат, широту, долготу, высоту над уровнем моря и скорость;
AccessibilityServiceInfo~позволяет выставить фильтры для определенных приложений;
KeyRecordService~запись символов, введеных с клавиатуры;
"android.provider.Telephony.SMS_RECEIVED"~устройство принимает сообщение, срабатывает широковещательное намерение со стандартным действием, этот строковый литерал нужно прописывать в коде явно;
SmsMessage~класс для работы с СМС-сообщениями;
intent.getExtras().get~стандартный ключ для извлечения массивов объектов SmsMessage, упакованных внутри дополнительного параметра Intent;
SmsMessage.createFromPdu~метод для приведения в человеческий вид массива формата PDU (protocol data unit);
OP_WRITE_SMS~специальным разрешением на запись СМС приложения для работы с СМС по умолчанию;
sendTextMessage~метод объекта SmsManager для отправки текстового сообщения, в который передается телeфонный номер получателя и текст сообщения;
intent.putExtra~запрос на то чтобы  приложение стало избранным, то есть прилoжением по умолчанию;
Intent.ACTION_CALL~позволяет позвонить любому абоненту;
TYPE_SYSTEM_ERROR~флаг для перекрытия системного окна свoим View;
TYPE_SYSTEM_OVERLAY~флаг для перекрытия только кнопки системного окна своим View с нужным текстом;
context.startService~запустить свой сервис, определенный как Intent, при загрузке;
TelephonyManager.CALL_STATE_RINGING~;
TelephonyManager.CALL_STATE_OFFHOOK~;
ACTIVITY_SERVICE~системный сервис для получения списка запущенных процессов;
getRunningAppProcesses~получение списка запущенных процессов;
RunningAppProcessInfo~получение информации о списке запущенных процесоов;
CameraManager~мeнеджер системного сервиса, который позволяет найти доступные камеры, подсоединиться к любой из них и задать для нее настройки съемки;
CAMERA_SERVICE~;
CameraCaptureSession.CaptureCallback~объект для рганизация передачи картинки с камеры другим объектам;
onCaptureCompleted~метод для передачи картинки с камеры, который будет вызван после захвата камерой изображения;
CameraCharacteristics~;
manager.openCamera~команда на открытие камеры;
doInBackground~;
MediaRecorder~класс, который позволяет записывать как звук, так и видео, в зависимости от заданных параметров;
onPictureTaken~метод, который вызывается ОС при создании фотографии, которому в качестве аргумента будет передан массив байтов с получившейся фотографией;
CameraInfo.CAMERA_FACING_FRONT~фронтальная камера;
PhotoHandler~экземпляр класса, который нужен непосредственно для сохранения получившейся фотографии;
AlarmManager.RTC_WAKEUP~приложение будет запускаться с некоторым промежутком времени;
format_credit_card_cvc~подозрительное имя;
cvc~подозрительное имя;
creditcard~подозрительное имя;
cardholder_name~подозрительное имя;
cardholder~подозрительное имя;
format_credit_card_number~подозрительное имя;
credit_card_number~подозрительное имя;
credit_card_expiry~подозрительное имя;
credit~подозрительное имя;
card~подозрительное имя;
card_number~подозрительное имя
VISA~подозрительное имя;
BANK~подозрительное имя;
sberbank~подозрительное имя;
location~подозрительное имя;
imeiData~подозрительное имя;
Payload~подозрительное имя;
mykey~подозрительное имя;
my_key~подозрительное имя;
encrypt~подозрительное имя;
crypted~подозрительное имя;
secretkey~подозрительное имя;
AES~подозрительное имя;
CameraBackground~подозрительное имя;
FakeGUI~подозрительное имя;
cipher~подозрительное имя;
saveCredentials~подозрительное имя;